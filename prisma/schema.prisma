generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model course {
  idcourse          Int     @id @unique(map: "idcourse_UNIQUE") @default(autoincrement())
  name              String  @db.VarChar(45)
  teacher_idteacher Int
  teacher           teacher @relation(fields: [teacher_idteacher], references: [idteacher], onDelete: NoAction, onUpdate: NoAction, map: "fk_course_teacher1")
  grade             grade[]

  @@index([teacher_idteacher], map: "fk_course_teacher1_idx")
}

model grade {
  idgrade           Int     @id @unique(map: "idgrade_UNIQUE") @default(autoincrement())
  result            Float   @db.Float
  course_idcourse   Int
  student_idstudent Int
  course            course  @relation(fields: [course_idcourse], references: [idcourse], onDelete: NoAction, onUpdate: NoAction, map: "fk_grade_course1")
  student           student @relation(fields: [student_idstudent], references: [idstudent], onDelete: NoAction, onUpdate: NoAction, map: "fk_grade_student1")

  @@index([course_idcourse], map: "fk_grade_course1_idx")
  @@index([student_idstudent], map: "fk_grade_student1_idx")
}

model student {
  idstudent   Int     @id @unique(map: "idstudent_UNIQUE") @default(autoincrement())
  user_iduser Int
  ine         String? @db.VarChar(45)
  grade       grade[]
  user        user    @relation(fields: [user_iduser], references: [iduser], onDelete: NoAction, onUpdate: NoAction, map: "fk_student_user")

  @@index([user_iduser], map: "fk_student_user_idx")
}

model teacher {
  idteacher   Int      @id @unique(map: "idteacher_UNIQUE") @default(autoincrement())
  user_iduser Int
  isAgreement Int      @db.TinyInt
  course      course[]
  user        user     @relation(fields: [user_iduser], references: [iduser], onDelete: NoAction, onUpdate: NoAction, map: "fk_teacher_user1")

  @@index([user_iduser], map: "fk_teacher_user1_idx")
}

model user {
  iduser    Int       @id @unique(map: "iduser_UNIQUE") @default(autoincrement())
  lastname  String    @db.VarChar(45)
  firstname String    @db.VarChar(45)
  email     String    @unique(map: "email_UNIQUE") @db.VarChar(45)
  password  String    @db.VarChar(45)
  student   student[]
  teacher   teacher[]
}
